#pragma once

struct IRCode {
  const char *codeName;
  const uint16_t codeArray[150];
};

const IRCode EPSON_CODES[4] = {
  { "FREEZE", { 0x0000, 0x006D, 0x0000, 0x0022, 0x0153, 0x00AA, 0x0015, 0x0040, 0x0015, 0x003F, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x003F, 0x0016, 0x003F, 0x0015, 0x0016, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0016, 0x0016, 0x003F, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x003F, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x003F, 0x0015, 0x0016, 0x0016, 0x003F, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x05BF } },
  { "POWER ON", { 0x0000, 0x006D, 0x0000, 0x0022, 0x0157, 0x00AB, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x060A } },
  { "POWER OFF", { 0x0000, 0x006D, 0x0000, 0x0022, 0x0157, 0x00AB, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x060A } },
  { "POWER TOGGLE", { 0x0000, 0x006C, 0x0000, 0x0022, 0x015B, 0x00AD, 0x0016, 0x0041, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0041, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0041, 0x0016, 0x0041, 0x0016, 0x0041, 0x0016, 0x0041, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0041, 0x0016, 0x0041, 0x0016, 0x0016, 0x0016, 0x0622 } }
};
const uint8_t EPSON_CODES_LENGTH = sizeof(EPSON_CODES) / sizeof(EPSON_CODES[0]);

const IRCode LED_STRIP_CODES[2] = {
  { "ON", { 0x2388, 0x11A8, 0x0244, 0x023A, 0x0244, 0x023A, 0x0212, 0x026C, 0x0212, 0x026C, 0x0212, 0x023A, 0x0212, 0x026C, 0x0212, 0x023A, 0x0244, 0x026C, 0x0212, 0x0686, 0x0212, 0x06B8, 0x0212, 0x0686, 0x0244, 0x0686, 0x0244, 0x026C, 0x0212, 0x0686, 0x0244, 0x0686, 0x0212, 0x06B8, 0x0212, 0x06B8, 0x0212, 0x0686, 0x0244, 0x026C, 0x0212, 0x023A, 0x0212, 0x026C, 0x0212, 0x026C, 0x0212, 0x023A, 0x0244, 0x023A, 0x0212, 0x026C, 0x0212, 0x023A, 0x0244, 0x0686, 0x0244, 0x0686, 0x0244, 0x0686, 0x0212, 0x06B8, 0x0212, 0x06B8, 0x0212, 0x0686, 0x0244 } },
  { "OFF", { 0x2388, 0x11DA, 0x0212, 0x023A, 0x0244, 0x023A, 0x0244, 0x023A, 0x0244, 0x023A, 0x0212, 0x023A, 0x0244, 0x023A, 0x0244, 0x023A, 0x0244, 0x023A, 0x0212, 0x0686, 0x0244, 0x0686, 0x0244, 0x0686, 0x0244, 0x0686, 0x0244, 0x023A, 0x0212, 0x06B8, 0x0212, 0x06B8, 0x0212, 0x06B8, 0x0212, 0x023A, 0x0244, 0x0686, 0x0244, 0x023A, 0x0244, 0x023A, 0x0212, 0x023A, 0x0244, 0x023A, 0x0244, 0x023A, 0x0244, 0x023A, 0x0212, 0x06B8, 0x0212, 0x023A, 0x0244, 0x0686, 0x0244, 0x0686, 0x0244, 0x0686, 0x0212, 0x06B8, 0x0212, 0x06B8, 0x0212, 0x0686, 0x0244 } }
};
const uint8_t LED_STRIP_CODES_LENGTH = sizeof(LED_STRIP_CODES) / sizeof(LED_STRIP_CODES[0]);

const IRCode ACER_CODES[2] = {
  { "FREEZE", { 0x0000, 0x006D, 0x0022, 0x0002, 0x0157, 0x00AC, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0041, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0041, 0x0015, 0x0041, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0041, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0041, 0x0015, 0x0041, 0x0015, 0x0041, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0041, 0x0015, 0x0041, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0041, 0x0015, 0x0041, 0x0015, 0x0041, 0x0015, 0x0016, 0x0015, 0x0689, 0x0157, 0x0056, 0x0015, 0x0E94 } },
  { "POWER TOGGLE", { 0x0000, 0x006D, 0x0022, 0x0002, 0x0157, 0x00AB, 0x0016, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x0015, 0x0015, 0x0015, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x06A1, 0x0157, 0x0055, 0x0015, 0x06A1 } }
};
const uint8_t ACER_CODES_LENGTH = sizeof(ACER_CODES) / sizeof(ACER_CODES[0]);

const IRCode BENQ_CODES[4] = {
  { "FREEZE", { 0x0000, 0x006D, 0x0000, 0x0022, 0x0157, 0x00AB, 0x0017, 0x0014, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0016, 0x0014, 0x0016, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x0014, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x0013, 0x0017, 0x0013, 0x0016, 0x0014, 0x0016, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x003C, 0x0017, 0x003D, 0x0017, 0x0663 } },
  { "POWER ON", { 0x0000, 0x006D, 0x0000, 0x0022, 0x0154, 0x00AA, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0016, 0x003D, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x0013, 0x0016, 0x0014, 0x0016, 0x003D, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x0013, 0x0017, 0x003D, 0x0016, 0x0653 } },
  { "POWER OFF", { 0x0000, 0x006D, 0x0000, 0x0022, 0x0157, 0x00AC, 0x0017, 0x0013, 0x0016, 0x0014, 0x0016, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x0014, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x0013, 0x0016, 0x0014, 0x0016, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x0013, 0x0017, 0x003D, 0x0016, 0x0013, 0x0017, 0x0013, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x003D, 0x0017, 0x0013, 0x0017, 0x003D, 0x0017, 0x0665 } },
  { "POWER TOGGLE", { 0x0000, 0x006D, 0x0000, 0x0022, 0x0157, 0x00AB, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0040, 0x0014, 0x0040, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0040, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0014, 0x0040, 0x0014, 0x0014, 0x0014, 0x0040, 0x0014, 0x0040, 0x0014, 0x0040, 0x0014, 0x0040, 0x0014, 0x0040, 0x0014, 0x0040, 0x0014, 0x06F5 } }
};
const uint8_t BENQ_CODES_LENGTH = sizeof(BENQ_CODES) / sizeof(BENQ_CODES[0]);

const IRCode NEC_CODES[4] = {
  { "FREEZE", { 0x0000, 0x006B, 0x0022, 0x0002, 0x015F, 0x00B0, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0016, 0x0015, 0x0043, 0x0015, 0x0016, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x05F6, 0x015F, 0x0058, 0x0015, 0x0E63 } },
  { "POWER ON", { 0x0000, 0x006B, 0x0022, 0x0002, 0x015F, 0x00B0, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0016, 0x0015, 0x0043, 0x0015, 0x0016, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0016, 0x0015, 0x0043, 0x0015, 0x0016, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x05F6, 0x015F, 0x0058, 0x0015, 0x0E63 } },
  { "POWER OFF", { 0x0000, 0x006B, 0x0022, 0x0002, 0x015F, 0x00B0, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0016, 0x0015, 0x0043, 0x0015, 0x0016, 0x0015, 0x0043, 0x0015, 0x0016, 0x0015, 0x0017, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0017, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x0043, 0x0015, 0x05F6, 0x015F, 0x0059, 0x0015, 0x0E62 } },
  { "POWER TOGGLE", { 0x0000, 0x006D, 0x0022, 0x0002, 0x0156, 0x00AA, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x0015, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x003F, 0x0016, 0x060F, 0x0156, 0x0055, 0x0016, 0x0E39 } },
};
const uint8_t NEC_CODES_LENGTH = sizeof(NEC_CODES) / sizeof(NEC_CODES[0]);

const IRCode PANASONIC_CODES[4] = {
  { "FREEZE", { 0x0000, 0x0070, 0x0000, 0x003A, 0x0080, 0x0040, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0ACE } },
  { "POWER ON", { 0x0000, 0x0070, 0x0000, 0x003A, 0x0080, 0x0040, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0ACE } },
  { "POWER OFF", { 0x0000, 0x0070, 0x0000, 0x003A, 0x0080, 0x0040, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0ACE } },
  { "POWER TOGGLE", { 0x0000, 0x0070, 0x0000, 0x003A, 0x0080, 0x0040, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0010, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0030, 0x0010, 0x0ACE } }
};
const uint8_t PANASONIC_CODES_LENGTH = sizeof(PANASONIC_CODES) / sizeof(PANASONIC_CODES[0]);